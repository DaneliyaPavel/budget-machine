version: '3.9'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: budget
    volumes:
      - db_data:/var/lib/postgresql/data
  redis:
    image: redis:7
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-connect:
    image: debezium/connect:2.5
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_config
      OFFSET_STORAGE_TOPIC: debezium_offset
      STATUS_STORAGE_TOPIC: debezium_status
    volumes:
      - ./kafka:/kafka/config
  web:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/budget
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      KAFKA_BROKER_URL: kafka:9092
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - kafka
  worker:
    build: .
    command: celery -A app.tasks worker --loglevel=info
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/budget
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - db
      - redis
      - kafka
  notify_worker:
    build: .
    command: python -m app.tasks.notify_worker
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/budget
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - db
      - redis
      - kafka

  bank_import:
    build: .
    command: python services/bank_import/main.py
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/budget
      KAFKA_BROKER_URL: kafka:9092
    depends_on:
      - db
      - kafka
volumes:
  db_data:
