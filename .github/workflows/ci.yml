name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r backend/requirements-dev.txt
          pip install ruff==0.12.1 black==25.1.0 pytest pytest-cov
      - name: Run linters
        run: make lint
      - name: Run tests
        run: pytest --cov=backend --cov-fail-under=90 tests

  bankbridge-tests:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r backend/requirements-dev.txt
          pip install jsonschema respx
      - name: Run bankbridge tests
        run: make bankbridge-tests
      - name: Build bankbridge image
        run: docker build -t bankbridge:${{ github.sha }} -f services/bank_bridge/Dockerfile .
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: bankbridge:${{ github.sha }}
          severity: CRITICAL
          exit-code: '1'
          ignore-unfixed: true

  codeql:
    permissions:
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
      - uses: github/codeql-action/analyze@v3
  semgrep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: returntocorp/semgrep-action@v1
        with:
          config: auto

  openapi:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Generate OpenAPI spec
        run: make openapi
      - name: Commit updated spec
        uses: EndBug/add-and-commit@v9
        with:
          message: 'chore: update openapi spec [skip ci]'
          add: docs/api/openapi.yaml
