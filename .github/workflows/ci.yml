name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r backend/requirements-dev.txt
          pip install ruff==0.12.1 black==25.1.0 pytest pytest-cov
      - name: Run linters
        run: make lint
      - name: Run tests
        run: pytest --cov=backend --cov-fail-under=90 tests

  bankbridge-tests:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r backend/requirements-dev.txt
          pip install jsonschema respx schemathesis playwright
      - name: Install Playwright browsers
        run: playwright install chromium
      - name: Validate schemas
        run: |
          python - <<'PY'
          import json
          from pathlib import Path
          from jsonschema import Draft202012Validator

          for schema_file in Path("schemas/bank-bridge").rglob("schema.json"):
              with open(schema_file, "r", encoding="utf-8") as f:
                  schema = json.load(f)
              Draft202012Validator.check_schema(schema)
              example = schema_file.with_name("example.json")
              if example.exists():
                  with open(example, "r", encoding="utf-8") as ef:
                      instance = json.load(ef)
                  Draft202012Validator(schema).validate(instance)
          PY
      - name: Start test environment
        run: docker compose -f tests/bank_bridge/docker-compose.yml up -d
      - name: Run bankbridge tests
        run: make bankbridge-tests
      - name: Run sandbox auth test
        run: python tests/bank_bridge/tinkoff_sandbox.py
        env:
          TINKOFF_SANDBOX_LOGIN: ${{ secrets.TINKOFF_SANDBOX_LOGIN }}
          TINKOFF_SANDBOX_PASSWORD: ${{ secrets.TINKOFF_SANDBOX_PASSWORD }}
        continue-on-error: true
      - name: Run contract tests
        run: |
          uvicorn services.bank_bridge.app:app --port 8080 --log-level warning &
          UVICORN_PID=$!
          sleep 5
          schemathesis run http://localhost:8080/openapi.json --url=http://localhost:8080 --max-examples=10
          kill $UVICORN_PID
      - name: Stop test environment
        if: always()
        run: docker compose -f tests/bank_bridge/docker-compose.yml down -v
      - name: Build bankbridge image
        run: docker build -t bankbridge:${{ github.sha }} -f services/bank_bridge/Dockerfile .
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: bankbridge:${{ github.sha }}
          severity: CRITICAL
          exit-code: '1'
          ignore-unfixed: true

  codeql:
    permissions:
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
      - uses: github/codeql-action/analyze@v3
  semgrep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: returntocorp/semgrep-action@v1
        with:
          config: auto

  openapi:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Generate OpenAPI spec
        run: make openapi
      - name: Commit updated spec
        uses: EndBug/add-and-commit@v9
        with:
          message: 'chore: update openapi spec [skip ci]'
          add: docs/api/openapi.yaml

  openapi-bankbridge:
    runs-on: ubuntu-latest
    needs: bankbridge-tests
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Generate Bank Bridge OpenAPI spec
        run: make openapi-bankbridge
      - name: Commit updated spec
        uses: EndBug/add-and-commit@v9
        with:
          message: 'chore: update bank-bridge openapi spec [skip ci]'
          add: docs/bank-bridge/openapi.yaml
